package nc;

import java.io.File;

import net.minecraftforge.common.config.Configuration;

public class Config {
	// Config File
	public static boolean workspace;
	public static boolean workspaceShiftClick;
	public static boolean nonTECoolerRecipes;
	
	public static int EMUpdateRate;
	public static int fissionUpdateRate;
	public static int fissionComparatorHeat;
	public static int fusionUpdateRate;
	public static int acceleratorUpdateRate;
	
	public static boolean oreGenCopper;
	public static int oreSizeCopper;
	public static int oreRarityCopper;
	public static int oreMaxHeightCopper;
	public static boolean oreGenTin;
	public static int oreSizeTin;
	public static int oreRarityTin;
	public static int oreMaxHeightTin;
	public static boolean oreGenLead;
	public static int oreSizeLead;
	public static int oreRarityLead;
	public static int oreMaxHeightLead;
	public static boolean oreGenSilver;
	public static int oreSizeSilver;
	public static int oreRaritySilver;
	public static int oreMaxHeightSilver;
	public static boolean oreGenUranium;
	public static int oreSizeUranium;
	public static int oreRarityUranium;
	public static int oreMaxHeightUranium;
	public static boolean oreGenThorium;
	public static int oreSizeThorium;
	public static int oreRarityThorium;
	public static int oreMaxHeightThorium;
	public static boolean oreGenLithium;
	public static int oreSizeLithium;
	public static int oreRarityLithium;
	public static int oreMaxHeightLithium;
	public static boolean oreGenBoron;
	public static int oreSizeBoron;
	public static int oreRarityBoron;
	public static int oreMaxHeightBoron;
	public static boolean oreGenMagnesium;
	public static int oreSizeMagnesium;
	public static int oreRarityMagnesium;
	public static int oreMaxHeightMagnesium;
	public static boolean oreGenPlutonium;
	public static int oreSizePlutonium;
	public static int oreRarityPlutonium;
	public static int oreMaxHeightPlutonium;
	
	public static int liquidHeliumLakeGen;
	
	public static int nuclearFurnaceCookSpeed;
	public static int nuclearFurnaceCookEfficiency;
	public static int metalFurnaceCookSpeed;
	public static int metalFurnaceCookEfficiency;
	public static int crusherCrushSpeed;
	public static int crusherCrushEfficiency;
	public static int electricCrusherCrushSpeed;
	public static int electricCrusherCrushEfficiency;
	public static int electricFurnaceSmeltSpeed;
	public static int electricFurnaceSmeltEfficiency;
	public static int separatorSpeed;
	public static int separatorEfficiency;
	public static int hastenerSpeed;
	public static int hastenerEfficiency;
	public static int collectorSpeed;
	public static int electrolyserSpeed;
	public static int electrolyserEfficiency;
	public static int oxidiserSpeed;
	public static int oxidiserEfficiency;
	public static int ioniserSpeed;
	public static int ioniserEfficiency;
	public static int irradiatorSpeed;
	public static int irradiatorEfficiency;
	public static int coolerSpeed;
	public static int coolerEfficiency;
	public static int factorySpeed;
	public static int factoryEfficiency;
	public static int heliumExtractorSpeed;
	public static int heliumExtractorEfficiency;
	public static int assemblerSpeed;
	public static int assemblerEfficiency;
	public static int recyclerSpeed;
	public static int recyclerEfficiency;
	public static int reactionGeneratorRF;
	public static int reactionGeneratorEfficiency;
	public static int RTGRF;
	public static int AmRTGRF;
	public static int CfRTGRF;
	public static int WRTGRF;
	public static int solarRF;
	public static int lithiumIonRF;
	public static int voltaicPileRF;
	public static int steamDecompressRate;
	public static int steamRFUsageRate;
	public static int explosionRadius;
	
	public static boolean enablePaul;
	public static boolean enableBrian;
	public static boolean enableNuclearMonster;
	public static boolean enableNukes;
	public static boolean enableEMP;
	public static boolean enableLoot;
	public static int lootModifier;
	public static boolean extraDrops;
	
	public static int fissionMaxLength;
	public static int fissionRF;
	public static int fissionSteam;
	public static int fissionEfficiency;
	public static int fissionHeat;
	public static boolean nuclearMeltdowns;
	public static boolean alternateCasing;
	
	public static int baseRFLEU;
	public static int baseRFHEU;
	public static int baseRFLEP;
	public static int baseRFHEP;
	public static int baseRFMOX;
	public static int baseRFTBU;
	public static int baseRFLEUOx;
	public static int baseRFHEUOx;
	public static int baseRFLEPOx;
	public static int baseRFHEPOx;
	public static int baseRFTBUOx;
	public static int baseRFLEN;
	public static int baseRFHEN;
	public static int baseRFLEA;
	public static int baseRFHEA;
	public static int baseRFLEC;
	public static int baseRFHEC;
	public static int baseRFLENOx;
	public static int baseRFHENOx;
	public static int baseRFLEAOx;
	public static int baseRFHEAOx;
	public static int baseRFLECOx;
	public static int baseRFHECOx;
	
	public static int baseFuelLEU;
	public static int baseFuelHEU;
	public static int baseFuelLEP;
	public static int baseFuelHEP;
	public static int baseFuelMOX;
	public static int baseFuelTBU;
	public static int baseFuelLEUOx;
	public static int baseFuelHEUOx;
	public static int baseFuelLEPOx;
	public static int baseFuelHEPOx;
	public static int baseFuelTBUOx;
	public static int baseFuelLEN;
	public static int baseFuelHEN;
	public static int baseFuelLEA;
	public static int baseFuelHEA;
	public static int baseFuelLEC;
	public static int baseFuelHEC;
	public static int baseFuelLENOx;
	public static int baseFuelHENOx;
	public static int baseFuelLEAOx;
	public static int baseFuelHEAOx;
	public static int baseFuelLECOx;
	public static int baseFuelHECOx;
	
	public static int baseHeatLEU;
	public static int baseHeatHEU;
	public static int baseHeatLEP;
	public static int baseHeatHEP;
	public static int baseHeatMOX;
	public static int baseHeatTBU;
	public static int baseHeatLEUOx;
	public static int baseHeatHEUOx;
	public static int baseHeatLEPOx;
	public static int baseHeatHEPOx;
	public static int baseHeatTBUOx;
	public static int baseHeatLEN;
	public static int baseHeatHEN;
	public static int baseHeatLEA;
	public static int baseHeatHEA;
	public static int baseHeatLEC;
	public static int baseHeatHEC;
	public static int baseHeatLENOx;
	public static int baseHeatHENOx;
	public static int baseHeatLEAOx;
	public static int baseHeatHEAOx;
	public static int baseHeatLECOx;
	public static int baseHeatHECOx;
	
	public static int standardCool;
	public static int waterCool;
	public static int cryotheumCool;
	public static int redstoneCool;
	public static int enderiumCool;
	public static int glowstoneCool;
	public static int heliumCool;
	public static int coolantCool;
	
	public static int fusionMaxRadius;
	public static int fusionRF;
	public static int fusionSteam;
	public static int fusionEfficiency;
	public static int fusionHeat;
	public static int electromagnetRF;
	public static boolean fusionMeltdowns;
	public static boolean fusionEfficiencyConverge;
	public static int fusionComparatorEfficiency;
	public static boolean fusionSounds;
	
	public static int baseRFHH;
	public static int baseRFHD;
	public static int baseRFHT;
	public static int baseRFHHe;
	public static int baseRFHB;
	public static int baseRFHLi6;
	public static int baseRFHLi7;
	public static int baseRFDD;
	public static int baseRFDT;
	public static int baseRFDHe;
	public static int baseRFDB;
	public static int baseRFDLi6;
	public static int baseRFDLi7;
	public static int baseRFTT;
	public static int baseRFTHe;
	public static int baseRFTB;
	public static int baseRFTLi6;
	public static int baseRFTLi7;
	public static int baseRFHeHe;
	public static int baseRFHeB;
	public static int baseRFHeLi6;
	public static int baseRFHeLi7;	
	public static int baseRFBB;
	public static int baseRFBLi6;
	public static int baseRFBLi7;	
	public static int baseRFLi6Li6;
	public static int baseRFLi6Li7;
	public static int baseRFLi7Li7;
	
	public static int baseFuelHH;
	public static int baseFuelHD;
	public static int baseFuelHT;
	public static int baseFuelHHe;
	public static int baseFuelHB;
	public static int baseFuelHLi6;
	public static int baseFuelHLi7;
	public static int baseFuelDD;
	public static int baseFuelDT;
	public static int baseFuelDHe;
	public static int baseFuelDB;
	public static int baseFuelDLi6;
	public static int baseFuelDLi7;
	public static int baseFuelTT;
	public static int baseFuelTHe;
	public static int baseFuelTB;
	public static int baseFuelTLi6;
	public static int baseFuelTLi7;
	public static int baseFuelHeHe;
	public static int baseFuelHeB;
	public static int baseFuelHeLi6;
	public static int baseFuelHeLi7;	
	public static int baseFuelBB;
	public static int baseFuelBLi6;
	public static int baseFuelBLi7;	
	public static int baseFuelLi6Li6;
	public static int baseFuelLi6Li7;
	public static int baseFuelLi7Li7;
	
	public static int heatHH;
	public static int heatHD;
	public static int heatHT;
	public static int heatHHe;
	public static int heatHB;
	public static int heatHLi6;
	public static int heatHLi7;
	public static int heatDD;
	public static int heatDT;
	public static int heatDHe;
	public static int heatDB;
	public static int heatDLi6;
	public static int heatDLi7;
	public static int heatTT;
	public static int heatTHe;
	public static int heatTB;
	public static int heatTLi6;
	public static int heatTLi7;
	public static int heatHeHe;
	public static int heatHeB;
	public static int heatHeLi6;
	public static int heatHeLi7;	
	public static int heatBB;
	public static int heatBLi6;
	public static int heatBLi7;	
	public static int heatLi6Li6;
	public static int heatLi6Li7;
	public static int heatLi7Li7;
	
	public static int ringMaxSize;
	public static int colliderRF;
	public static int colliderProduction;
	public static int synchrotronRF;
	public static int synchrotronProduction;
	public static int superElectromagnetRF;
	public static int electromagnetHe;
	public static int acceleratorProduction;
	public static boolean acceleratorSounds;
	
	public static int bronzeHarvestLevel;
	public static int bronzeDurability;
	public static int bronzeSpeed;
	public static int bronzeDamage;
	
	public static int toughHarvestLevel;
	public static int toughDurability;
	public static int toughSpeed;
	public static int toughDamage;
	
	public static int tPHarvestLevel;
	public static int tPDurability;
	public static int tPSpeed;
	public static int tPDamage;
	
	public static int dUHarvestLevel;
	public static int dUDurability;
	public static int dUSpeed;
	public static int dUDamage;
	
	public static int dUPHarvestLevel;
	public static int dUPDurability;
	public static int dUPSpeed;
	public static int dUPDamage;
	
	public static int boronHarvestLevel;
	public static int boronDurability;
	public static int boronSpeed;
	public static int boronDamage;
	
	public static void loadConfig() {
		Configuration config = new Configuration(new File("config/NuclearCraft/NCConfig.cfg"));
		Configuration fissionConfig = new Configuration(new File("config/NuclearCraft/FissionConfig.cfg"));
		Configuration fusionConfig = new Configuration(new File("config/NuclearCraft/FusionConfig.cfg"));
		Configuration acceleratorConfig = new Configuration(new File("config/NuclearCraft/AcceleratorConfig.cfg"));
		Configuration toolConfig = new Configuration(new File("config/NuclearCraft/ToolConfig.cfg"));
		config.load();
		fissionConfig.load();
		fusionConfig.load();
		acceleratorConfig.load();
		toolConfig.load();
		
		workspace = config.getBoolean("If disabled, all crafting recipes will be vanilla crafting table recipes, and the Heavy Duty Workspace will be disabled", "!: Enable Heavy Duty Workspace", true, "");
		workspaceShiftClick = config.getBoolean("If enabled, shift clicking items in the Heavy Duty Workspace will move items into the crafting grid", "!: Enable Shift Click into Workspace Grid", false, "");
		nonTECoolerRecipes = config.getBoolean("Enable the vanilla crafting recipes for the advanced reactor coolers EVEN IF Thermal Expansion is not installed", "!: Force Vanilla Crafting of Coolers", false, "");
		
		oreGenCopper = config.getBoolean("Generation", "0.0: Copper Ore", true, "");
		oreSizeCopper = config.getInt("Chunk Size", "0.0: Copper Ore", 8, 1, 100, "");
		oreRarityCopper = config.getInt("Gen Rate", "0.0: Copper Ore", 12, 1, 100, "");
		oreMaxHeightCopper = config.getInt("Max Height", "0.0: Copper Ore", 60, 1, 255, "");
		oreGenTin = config.getBoolean("Generation", "0.1: Tin Ore", true, "");
		oreSizeTin = config.getInt("Chunk Size", "0.1: Tin Ore", 8, 1, 100, "");
		oreRarityTin = config.getInt("Gen Rate", "0.1: Tin Ore", 11, 1, 100, "");
		oreMaxHeightTin = config.getInt("Max Height", "0.1: Tin Ore", 60, 1, 255, "");
		oreGenLead = config.getBoolean("Generation", "0.2: Lead Ore", true, "");
		oreSizeLead = config.getInt("Chunk Size", "0.2: Lead Ore", 7, 1, 100, "");
		oreRarityLead = config.getInt("Gen Rate", "0.2: Lead Ore", 11, 1, 100, "");
		oreMaxHeightLead = config.getInt("Max Height", "0.2: Lead Ore", 40, 1, 255, "");
		oreGenSilver = config.getBoolean("Generation", "0.3: Silver Ore", true, "");
		oreSizeSilver = config.getInt("Chunk Size", "0.3: Silver Ore", 7, 1, 100, "");
		oreRaritySilver = config.getInt("Gen Rate", "0.3: Silver Ore", 10, 1, 100, "");
		oreMaxHeightSilver = config.getInt("Max Height", "0.3: Silver Ore", 40, 1, 255, "");
		oreGenUranium = config.getBoolean("Generation", "0.4: Uranium Ore", true, "");
		oreSizeUranium = config.getInt("Chunk Size", "0.4: Uranium Ore", 10, 1, 100, "");
		oreRarityUranium = config.getInt("Gen Rate", "0.4: Uranium Ore", 2, 1, 100, "");
		oreMaxHeightUranium = config.getInt("Max Height", "0.4: Uranium Ore", 36, 1, 255, "");
		oreGenThorium = config.getBoolean("Generation", "0.5: Thorium Ore", true, "");
		oreSizeThorium = config.getInt("Chunk Size", "0.5: Thorium Ore", 7, 1, 100, "");
		oreRarityThorium = config.getInt("Gen Rate", "0.5: Thorium Ore", 2, 1, 100, "");
		oreMaxHeightThorium = config.getInt("Max Height", "0.5: Thorium Ore", 36, 1, 255, "");
		oreGenLithium = config.getBoolean("Generation", "0.6: Lithium Ore", true, "");
		oreSizeLithium = config.getInt("Chunk Size", "0.6: Lithium Ore", 7, 1, 100, "");
		oreRarityLithium = config.getInt("Gen Rate", "0.6: Lithium Ore", 7, 1, 100, "");
		oreMaxHeightLithium = config.getInt("Max Height", "0.6: Lithium Ore", 32, 1, 255, "");
		oreGenBoron = config.getBoolean("Generation", "0.7: Boron Ore", true, "");
		oreSizeBoron = config.getInt("Chunk Size", "0.7: Boron Ore", 7, 1, 100, "");
		oreRarityBoron = config.getInt("Gen Rate", "0.7: Boron Ore", 7, 1, 100, "");
		oreMaxHeightBoron = config.getInt("Max Height", "0.7: Boron Ore", 24, 1, 255, "");
		oreGenMagnesium = config.getBoolean("Generation", "0.8: Magnesium Ore", true, "");
		oreSizeMagnesium = config.getInt("Chunk Size", "0.8: Magnesium Ore", 7, 1, 100, "");
		oreRarityMagnesium = config.getInt("Gen Rate", "0.8: Magnesium Ore", 7, 1, 100, "");
		oreMaxHeightMagnesium = config.getInt("Max Height", "0.8: Magnesium Ore", 24, 1, 255, "");
		oreGenPlutonium = config.getBoolean("Generation", "0.9: Plutonium Ore", true, "");
		oreSizePlutonium = config.getInt("Chunk Size", "0.9: Plutonium Ore", 17, 1, 100, "");
		oreRarityPlutonium = config.getInt("Gen Rate", "0.9: Plutonium Ore", 1, 1, 100, "");
		oreMaxHeightPlutonium = config.getInt("Max Height", "0.9: Plutonium Ore", 255, 1, 255, "");
		
		liquidHeliumLakeGen = config.getInt("Liquid Helium Gen Rate in End", "0.10: World Gen", 0, 0, 10, "");

		electricCrusherCrushSpeed = config.getInt("Electic Crusher Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		electricCrusherCrushEfficiency = config.getInt("Electic Crusher Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		electricFurnaceSmeltSpeed = config.getInt("Electic Furnace Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		electricFurnaceSmeltEfficiency = config.getInt("Electic Furnace Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		separatorSpeed = config.getInt("Isotope Separator Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		separatorEfficiency = config.getInt("Isotope Separator Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		hastenerSpeed = config.getInt("Decay Hastener Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		hastenerEfficiency = config.getInt("Decay Hastener Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		electrolyserSpeed = config.getInt("Electrolyser Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		electrolyserEfficiency = config.getInt("Electrolyser Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		oxidiserSpeed = config.getInt("Oxidiser Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		oxidiserEfficiency = config.getInt("Oxidiser Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		ioniserSpeed = config.getInt("Ioniser Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		ioniserEfficiency = config.getInt("Ioniser Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		irradiatorSpeed = config.getInt("Neutron Irradiator Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		irradiatorEfficiency = config.getInt("Neutron Irradiator Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		coolerSpeed = config.getInt("Supercooler Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		coolerEfficiency = config.getInt("Supercooler Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		factorySpeed = config.getInt("Manufactory Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		factoryEfficiency = config.getInt("Manufactory Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		heliumExtractorSpeed = config.getInt("Helium Extractor Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		heliumExtractorEfficiency = config.getInt("Helium Extractor Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		assemblerSpeed = config.getInt("Assembler Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		assemblerEfficiency = config.getInt("Assembler Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		recyclerSpeed = config.getInt("Fuel Recycler Speed Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		recyclerEfficiency = config.getInt("Fuel Recycler Efficiency Multiplier", "1.0: RF Machines", 100, 10, 1000, "");
		reactionGeneratorRF = config.getInt("Reaction Generator RF/t", "1.1: RF Generators", 100, 10, 1000, "");
		reactionGeneratorEfficiency = config.getInt("Reaction Generator Efficiency Multiplier", "1.1: RF Generators", 100, 10, 1000, "");
		RTGRF = config.getInt("Plutonium RTG RF/t", "1.1: RF Generators", 100, 1, 1000, "");
		AmRTGRF = config.getInt("Americium RTG RF/t", "1.1: RF Generators", 40, 1, 1000, "");
		CfRTGRF = config.getInt("Californium RTG RF/t", "1.1: RF Generators", 500, 1, 1000, "");
		WRTGRF = config.getInt("WRTG RF/t", "1.1: RF Generators", 5, 1, 1000, "");
		solarRF = config.getInt("Solar Panel RF/t", "1.1: RF Generators", 10, 1, 1000, "");
		nuclearFurnaceCookSpeed = config.getInt("Nuclear Furnace Speed Multiplier", "1.2: Non-RF Machines", 100, 10, 1000, "");
		nuclearFurnaceCookEfficiency = config.getInt("Nuclear Furnace Fuel Usage Multiplier", "1.2: Non-RF Machines", 100, 10, 1000, "");
		metalFurnaceCookSpeed = config.getInt("Metal Furnace Speed Multiplier", "1.2: Non-RF Machines", 100, 10, 1000, "");
		metalFurnaceCookEfficiency = config.getInt("Metal Furnace Fuel Usage Multiplier", "1.2: Non-RF Machines", 100, 10, 1000, "");
		crusherCrushSpeed = config.getInt("Crusher Speed Multiplier", "1.2: Non-RF Machines", 100, 10, 1000, "");
		crusherCrushEfficiency = config.getInt("Crusher Fuel Usage Multiplier", "1.2: Non-RF Machines", 100, 10, 1000, "");
		collectorSpeed = config.getInt("Helium Collector Speed Multiplier", "1.2: Non-RF Machines", 100, 10, 1000, "");
		lithiumIonRF = config.getInt("Lithium Ion Battery RF", "1.3: RF Storage", 10000000, 1, 100000000, "");
		voltaicPileRF = config.getInt("Voltaic Pile RF", "1.3: RF Storage", 1000000, 1, 100000000, "");
		
		steamDecompressRate = config.getInt("Steam Decompressor Rate", "1.4: Steam Manipulators", 2, 1, 100, "");
		steamRFUsageRate = config.getInt("Steam Generator Usage Rate", "1.4: Steam Manipulators", 2000, 1, 100000, "");
		
		explosionRadius = config.getInt("General Explosion Radius Modifier", "1.5: Explosions", 100, 10, 1000, "");
		
		enableNuclearMonster = config.getBoolean("Enable Nuclear Monsters Spawning", "2.0: Mobs", true, "");
		enablePaul = config.getBoolean("Enable Paul", "2.0: Mobs", false, "");
		enableBrian = config.getBoolean("Enable Brian", "2.0: Mobs", false, "");
		enableNukes = config.getBoolean("Enable Nuclear and Antimatter Weapons", "2.1: Other", true, "");
		enableEMP = config.getBoolean("Enable EMP Weapon", "2.1: Other", true, "");
		enableLoot = config.getBoolean("Enable Loot in Generated Chests", "2.1: Other", true, "");
		lootModifier = config.getInt("Dungeon Loot Frequency", "2.1: Other", 2, 0, 10, "");
		extraDrops = config.getBoolean("Enable Extra Mob and Ore Drops", "2.1: Other", true, "");
		
		fissionUpdateRate = fissionConfig.getInt("Number of ticks per update of Fission Reactors", "!: Update Rate", 20, 1, 1000, "");
		fissionComparatorHeat = fissionConfig.getInt("The heat at which the comparator will emit a full redstone signal", "!: Comparator Heat", 250000, 1, 1000000, "");
		fissionMaxLength = fissionConfig.getInt("Fission Reactor Maximum Interior Length", "0: General", 25, 1, 100, "");
		fissionRF = fissionConfig.getInt("Fission Reactor RF Production Multiplier", "0: General", 100, 10, 1000, "");
		fissionSteam = fissionConfig.getInt("Fission Reactor Steam Production Multiplier", "0: General", 100, 10, 1000, "");
		fissionEfficiency = fissionConfig.getInt("Fission Reactor Fuel Efficiency Multiplier", "0: General", 100, 10, 1000, "");
		fissionHeat = fissionConfig.getInt("Fission Reactor Heat Production Multiplier", "0: General", 100, 10, 1000, "");
		nuclearMeltdowns = fissionConfig.getBoolean("Enable Fission Reactor Meltdowns", "0: General", true, "");
		alternateCasing = fissionConfig.getBoolean("Use Alternate Casing Texture", "0: General", false, "");
		
		baseRFLEU = fissionConfig.getInt("LEU Base Power", "1: Fission Fuel Base Power/Steam Production", 200, 20, 2000, "");
		baseRFHEU = fissionConfig.getInt("HEU Base Power", "1: Fission Fuel Base Power/Steam Production", 800, 80, 8000, "");
		baseRFLEP = fissionConfig.getInt("LEP Base Power", "1: Fission Fuel Base Power/Steam Production", 400, 40, 4000, "");
		baseRFHEP = fissionConfig.getInt("HEP Base Power", "1: Fission Fuel Base Power/Steam Production", 1600, 160, 16000, "");
		baseRFMOX = fissionConfig.getInt("MOX Base Power", "1: Fission Fuel Base Power/Steam Production", 500, 50, 5000, "");
		baseRFTBU = fissionConfig.getInt("TBU Base Power", "1: Fission Fuel Base Power/Steam Production", 100, 10, 1000, "");
		baseRFLEUOx = fissionConfig.getInt("LEU-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 300, 30, 3000, "");
		baseRFHEUOx = fissionConfig.getInt("HEU-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 1200, 120, 12000, "");
		baseRFLEPOx = fissionConfig.getInt("LEP-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 600, 60, 6000, "");
		baseRFHEPOx = fissionConfig.getInt("HEP-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 2400, 240, 24000, "");
		baseRFTBUOx = fissionConfig.getInt("TBU-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 150, 15, 1500, "");
		
		baseRFLEN = fissionConfig.getInt("LEN Base Power", "1: Fission Fuel Base Power/Steam Production", 150, 15, 1500, "");
		baseRFHEN = fissionConfig.getInt("HEN Base Power", "1: Fission Fuel Base Power/Steam Production", 600, 60, 6000, "");
		baseRFLEA = fissionConfig.getInt("LEA Base Power", "1: Fission Fuel Base Power/Steam Production", 300, 30, 3000, "");
		baseRFHEA = fissionConfig.getInt("HEA Base Power", "1: Fission Fuel Base Power/Steam Production", 1200, 120, 12000, "");
		baseRFLEC = fissionConfig.getInt("LEC Base Power", "1: Fission Fuel Base Power/Steam Production", 500, 50, 5000, "");
		baseRFHEC = fissionConfig.getInt("HEC Base Power", "1: Fission Fuel Base Power/Steam Production", 2000, 200, 20000, "");
		baseRFLENOx = fissionConfig.getInt("LEN-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 225, 22, 2250, "");
		baseRFHENOx = fissionConfig.getInt("HEN-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 900, 90, 9000, "");
		baseRFLEAOx = fissionConfig.getInt("LEA-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 450, 45, 4500, "");
		baseRFHEAOx = fissionConfig.getInt("HEA-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 1800, 180, 18000, "");
		baseRFLECOx = fissionConfig.getInt("LEC-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 750, 75, 7500, "");
		baseRFHECOx = fissionConfig.getInt("HEC-Ox Base Power", "1: Fission Fuel Base Power/Steam Production", 3000, 300, 30000, "");
		
		baseFuelLEU = fissionConfig.getInt("LEU Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelHEU = fissionConfig.getInt("HEU Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelLEP = fissionConfig.getInt("LEP Usage Rate", "2: Fission Fuel Usage Rate", 50000, 5000, 500000, "");
		baseFuelHEP = fissionConfig.getInt("HEP Usage Rate", "2: Fission Fuel Usage Rate", 50000, 5000, 500000, "");
		baseFuelMOX = fissionConfig.getInt("MOX Usage Rate", "2: Fission Fuel Usage Rate", 37500, 3750, 375000, "");
		baseFuelTBU = fissionConfig.getInt("TBU Usage Rate", "2: Fission Fuel Usage Rate", 12500, 1250, 125000, "");
		baseFuelLEUOx = fissionConfig.getInt("LEU-Ox Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelHEUOx = fissionConfig.getInt("HEU-Ox Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelLEPOx = fissionConfig.getInt("LEP-Ox Usage Rate", "2: Fission Fuel Usage Rate", 50000, 5000, 500000, "");
		baseFuelHEPOx = fissionConfig.getInt("HEP-Ox Usage Rate", "2: Fission Fuel Usage Rate", 50000, 5000, 500000, "");
		baseFuelTBUOx = fissionConfig.getInt("TBU-Ox Usage Rate", "2: Fission Fuel Usage Rate", 12500, 1250, 125000, "");
		
		baseFuelLEN = fissionConfig.getInt("LEN Usage Rate", "2: Fission Fuel Usage Rate", 12500, 1250, 125000, "");
		baseFuelHEN = fissionConfig.getInt("HEN Usage Rate", "2: Fission Fuel Usage Rate", 12500, 1250, 125000, "");
		baseFuelLEA = fissionConfig.getInt("LEA Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelHEA = fissionConfig.getInt("HEA Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelLEC = fissionConfig.getInt("LEC Usage Rate", "2: Fission Fuel Usage Rate", 37500, 3750, 375000, "");
		baseFuelHEC = fissionConfig.getInt("HEC Usage Rate", "2: Fission Fuel Usage Rate", 37500, 3750, 375000, "");
		baseFuelLENOx = fissionConfig.getInt("LEN-Ox Usage Rate", "2: Fission Fuel Usage Rate", 12500, 1250, 125000, "");
		baseFuelHENOx = fissionConfig.getInt("HEN-Ox Usage Rate", "2: Fission Fuel Usage Rate", 12500, 1250, 125000, "");
		baseFuelLEAOx = fissionConfig.getInt("LEA-Ox Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelHEAOx = fissionConfig.getInt("HEA-Ox Usage Rate", "2: Fission Fuel Usage Rate", 25000, 2500, 250000, "");
		baseFuelLECOx = fissionConfig.getInt("LEC-Ox Usage Rate", "2: Fission Fuel Usage Rate", 37500, 3750, 375000, "");
		baseFuelHECOx = fissionConfig.getInt("HEC-Ox Usage Rate", "2: Fission Fuel Usage Rate", 37500, 3750, 375000, "");
		
		baseHeatLEU = fissionConfig.getInt("LEU Base Heat", "3: Fission Fuel Base Heat", 80, 8, 800, "");
		baseHeatHEU = fissionConfig.getInt("HEU Base Heat", "3: Fission Fuel Base Heat", 640, 64, 6400, "");
		baseHeatLEP = fissionConfig.getInt("LEP Base Heat", "3: Fission Fuel Base Heat", 200, 20, 2000, "");
		baseHeatHEP = fissionConfig.getInt("HEP Base Heat", "3: Fission Fuel Base Heat", 1600, 160, 16000, "");
		baseHeatMOX = fissionConfig.getInt("MOX Base Heat", "3: Fission Fuel Base Heat", 240, 24, 2400, "");
		baseHeatTBU = fissionConfig.getInt("TBU Base Heat", "3: Fission Fuel Base Heat", 20, 2, 200, "");
		baseHeatLEUOx = fissionConfig.getInt("LEU-Ox Base Heat", "3: Fission Fuel Base Heat", 100, 10, 1000, "");
		baseHeatHEUOx = fissionConfig.getInt("HEU-Ox Base Heat", "3: Fission Fuel Base Heat", 800, 80, 8000, "");
		baseHeatLEPOx = fissionConfig.getInt("LEP-Ox Base Heat", "3: Fission Fuel Base Heat", 250, 25, 2500, "");
		baseHeatHEPOx = fissionConfig.getInt("HEP-Ox Base Heat", "3: Fission Fuel Base Heat", 2000, 200, 20000, "");
		baseHeatTBUOx = fissionConfig.getInt("TBU-Ox Base Heat", "3: Fission Fuel Base Heat", 25, 2, 250, "");
		
		baseHeatLEN = fissionConfig.getInt("LEN Base Heat", "3: Fission Fuel Base Heat", 40, 4, 400, "");
		baseHeatHEN = fissionConfig.getInt("HEN Base Heat", "3: Fission Fuel Base Heat", 320, 32, 3200, "");
		baseHeatLEA = fissionConfig.getInt("LEA Base Heat", "3: Fission Fuel Base Heat", 120, 12, 1200, "");
		baseHeatHEA = fissionConfig.getInt("HEA Base Heat", "3: Fission Fuel Base Heat", 960, 96, 9600, "");
		baseHeatLEC = fissionConfig.getInt("LEC Base Heat", "3: Fission Fuel Base Heat", 300, 30, 3000, "");
		baseHeatHEC = fissionConfig.getInt("HEC Base Heat", "3: Fission Fuel Base Heat", 2400, 240, 24000, "");
		baseHeatLENOx = fissionConfig.getInt("LEN-Ox Base Heat", "3: Fission Fuel Base Heat", 50, 5, 500, "");
		baseHeatHENOx = fissionConfig.getInt("HEN-Ox Base Heat", "3: Fission Fuel Base Heat", 400, 40, 4000, "");
		baseHeatLEAOx = fissionConfig.getInt("LEA-Ox Base Heat", "3: Fission Fuel Base Heat", 150, 15, 1500, "");
		baseHeatHEAOx = fissionConfig.getInt("HEA-Ox Base Heat", "3: Fission Fuel Base Heat", 1200, 120, 12000, "");
		baseHeatLECOx = fissionConfig.getInt("LEC-Ox Base Heat", "3: Fission Fuel Base Heat", 375, 37, 3750, "");
		baseHeatHECOx = fissionConfig.getInt("HEC-Ox Base Heat", "3: Fission Fuel Base Heat", 3000, 300, 30000, "");
		
		standardCool = fissionConfig.getInt("Standard Cooler", "5: Cooler Base Cooling Rates (H/t)", 30, 1, 250, "");
		waterCool = fissionConfig.getInt("Water Cooler", "5: Cooler Base Cooling Rates (H/t)", 30, 1, 250, "");
		cryotheumCool = fissionConfig.getInt("Cryotheum Cooler", "5: Cooler Base Cooling Rates (H/t)", 80, 1, 250, "");
		redstoneCool = fissionConfig.getInt("Redstone Cooler", "5: Cooler Base Cooling Rates (H/t)", 80, 1, 250, "");
		enderiumCool = fissionConfig.getInt("Enderium Cooler", "5: Cooler Base Cooling Rates (H/t)", 80, 1, 250, "");
		glowstoneCool = fissionConfig.getInt("Glowstone Cooler", "5: Cooler Base Cooling Rates (H/t)", 80, 1, 250, "");
		heliumCool = fissionConfig.getInt("Liquid Helium Cooler", "5: Cooler Base Cooling Rates (H/t)", 125, 1, 250, "");
		coolantCool = fissionConfig.getInt("IC2 Coolant Cooler", "5: Cooler Base Cooling Rates (H/t)", 80, 1, 250, "");
		
		fusionUpdateRate = fusionConfig.getInt("Number of ticks per update of Fusion Reactors", "!: Update Rate", 20, 1, 1000, "");
		fusionSounds = fusionConfig.getBoolean("Enable Fusion Reactor Sound Effects", "!: Sounds", true, "");
		fusionEfficiencyConverge = fusionConfig.getBoolean("Make Fusion Reactors' efficiencies converge towards 100% - this would mean comparators would not be needed", "!: Efficiency Converge", false, "");
		fusionComparatorEfficiency = fusionConfig.getInt("The efficiency at which the comparator will emit a full redstone signal", "!: Comparator Efficiency", 90, 1, 100, "");
		fusionMaxRadius = fusionConfig.getInt("Fusion Reactor Maximum Radius - Defined as Number of Fusion Connectors Between the Control Chunk and a Central Inner Electromagnet", "0: General", 25, 1, 100, "");
		fusionRF = fusionConfig.getInt("Fusion Reactor RF Production Multiplier", "0: General", 100, 10, 1000, "");
		fusionSteam = fusionConfig.getInt("Fusion Reactor Steam Production Multiplier", "0: General", 100, 10, 1000, "");
		fusionEfficiency = fusionConfig.getInt("Fusion Reactor Fuel Efficiency Multiplier", "0: General", 100, 10, 1000, "");
		fusionHeat = fusionConfig.getInt("Fusion Reactor Heat Production Multiplier", "0: General", 100, 10, 1000, "");
		electromagnetRF = fusionConfig.getInt("Electromagnet RF/t Requirement", "0: General", 50, 0, 1000, "");
		fusionMeltdowns = fusionConfig.getBoolean("Enable Fusion Reactor Overheating", "0: General", true, "");
		
		baseRFHH = fusionConfig.getInt("HH Base Power", "1: Fusion Combo Base Power", 320, 32, 3200, "");
		baseRFHD = fusionConfig.getInt("HD Base Power", "1: Fusion Combo Base Power", 240, 24, 2400, "");
		baseRFHT = fusionConfig.getInt("HT Base Power", "1: Fusion Combo Base Power", 80, 8, 800, "");
		baseRFHHe = fusionConfig.getInt("HHe Base Power", "1: Fusion Combo Base Power", 80, 8, 800, "");
		baseRFHB = fusionConfig.getInt("HB Base Power", "1: Fusion Combo Base Power", 320, 32, 3200, "");
		baseRFHLi6 = fusionConfig.getInt("HLi6 Base Power", "1: Fusion Combo Base Power", 120, 12, 1200, "");
		baseRFHLi7 = fusionConfig.getInt("HLi7 Base Power", "1: Fusion Combo Base Power", 480, 48, 4800, "");
		baseRFDD = fusionConfig.getInt("DD Base Power", "1: Fusion Combo Base Power", 560, 56, 5600, "");
		baseRFDT = fusionConfig.getInt("DT Base Power", "1: Fusion Combo Base Power", 800, 80, 8000, "");
		baseRFDHe = fusionConfig.getInt("DHe Base Power", "1: Fusion Combo Base Power", 640, 64, 6400, "");
		baseRFDB = fusionConfig.getInt("DB Base Power", "1: Fusion Combo Base Power", 80, 8, 800, "");
		baseRFDLi6 = fusionConfig.getInt("DLi6 Base Power", "1: Fusion Combo Base Power", 600, 60, 6000, "");
		baseRFDLi7 = fusionConfig.getInt("DLi7 Base Power", "1: Fusion Combo Base Power", 40, 4, 400, "");
		baseRFTT = fusionConfig.getInt("TT Base Power", "1: Fusion Combo Base Power", 240, 24, 2400, "");
		baseRFTHe = fusionConfig.getInt("THe Base Power", "1: Fusion Combo Base Power", 160, 16, 1600, "");
		baseRFTB = fusionConfig.getInt("TB Base Power", "1: Fusion Combo Base Power", 40, 4, 400, "");
		baseRFTLi6 = fusionConfig.getInt("TLi6 Base Power", "1: Fusion Combo Base Power", 20, 2, 200, "");
		baseRFTLi7 = fusionConfig.getInt("TLi7 Base Power", "1: Fusion Combo Base Power", 40, 4, 400, "");
		baseRFHeHe = fusionConfig.getInt("HeHe Base Power", "1: Fusion Combo Base Power", 480, 48, 4800, "");
		baseRFHeB = fusionConfig.getInt("HeB Base Power", "1: Fusion Combo Base Power", 20, 2, 200, "");
		baseRFHeLi6 = fusionConfig.getInt("HeLi6 Base Power", "1: Fusion Combo Base Power", 560, 56, 5600, "");
		baseRFHeLi7 = fusionConfig.getInt("HeLi7 Base Power", "1: Fusion Combo Base Power", 120, 12, 1200, "");
		baseRFBB = fusionConfig.getInt("BB Base Power", "1: Fusion Combo Base Power", 40, 4, 400, "");
		baseRFBLi6 = fusionConfig.getInt("BLi6 Base Power", "1: Fusion Combo Base Power", 20, 2, 200, "");
		baseRFBLi7 = fusionConfig.getInt("BLi7 Base Power", "1: Fusion Combo Base Power", 20, 2, 200, "");
		baseRFLi6Li6 = fusionConfig.getInt("Li6Li6 Base Power", "1: Fusion Combo Base Power", 20, 2, 200, "");
		baseRFLi6Li7 = fusionConfig.getInt("Li6Li7 Base Power", "1: Fusion Combo Base Power", 20, 2, 200, "");
		baseRFLi7Li7 = fusionConfig.getInt("Li7Li7 Base Power", "1: Fusion Combo Base Power", 20, 2, 200, "");
		
		baseFuelHH = fusionConfig.getInt("HH Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 800, 80, 8000, "");
		baseFuelHD = fusionConfig.getInt("HD Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 480, 48, 4800, "");
		baseFuelHT = fusionConfig.getInt("HT Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 320, 32, 3200, "");
		baseFuelHHe = fusionConfig.getInt("HHe Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 320, 32, 3200, "");
		baseFuelHB = fusionConfig.getInt("HB Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 80, 8, 800, "");
		baseFuelHLi6 = fusionConfig.getInt("HLi6 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 80, 8, 800, "");
		baseFuelHLi7 = fusionConfig.getInt("HLi7 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 160, 16, 1600, "");
		baseFuelDD = fusionConfig.getInt("DD Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 320, 32, 3200, "");
		baseFuelDT = fusionConfig.getInt("DT Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 640, 64, 6400, "");
		baseFuelDHe = fusionConfig.getInt("DHe Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 200, 20, 2000, "");
		baseFuelDB = fusionConfig.getInt("DB Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 80, 8, 800, "");
		baseFuelDLi6 = fusionConfig.getInt("DLi6 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 200, 20, 2000, "");
		baseFuelDLi7 = fusionConfig.getInt("DLi7 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 40, 4, 400, "");
		baseFuelTT = fusionConfig.getInt("TT Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 120, 12, 1200, "");
		baseFuelTHe = fusionConfig.getInt("THe Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 80, 8, 800, "");
		baseFuelTB = fusionConfig.getInt("TB Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 80, 8, 800, "");
		baseFuelTLi6 = fusionConfig.getInt("TLi6 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 16, 1, 160, "");
		baseFuelTLi7 = fusionConfig.getInt("TLi7 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 32, 3, 320, "");
		baseFuelHeHe = fusionConfig.getInt("HeHe Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 120, 12, 1200, "");
		baseFuelHeB = fusionConfig.getInt("HeB Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 40, 4, 400, "");
		baseFuelHeLi6 = fusionConfig.getInt("HeLi6 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 160, 16, 1600, "");
		baseFuelHeLi7 = fusionConfig.getInt("HeLi7 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 80, 8, 800, "");
		baseFuelBB = fusionConfig.getInt("BB Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 40, 4, 400, "");
		baseFuelBLi6 = fusionConfig.getInt("BLi6 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 40, 4, 400, "");
		baseFuelBLi7 = fusionConfig.getInt("BLi7 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 20, 2, 200, "");
		baseFuelLi6Li6 = fusionConfig.getInt("Li6Li6 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 20, 2, 200, "");
		baseFuelLi6Li7 = fusionConfig.getInt("Li6Li7 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 40, 4, 400, "");
		baseFuelLi7Li7 = fusionConfig.getInt("Li7Li7 Base Fuel Usage Rate", "2: Fusion Combo Base Fuel Usage Rate", 20, 2, 200, "");
		
		heatHH = fusionConfig.getInt("HH Heat Variable", "3: Fusion Combo Heat Variable", 2140, 500, 20000, "");
		heatHD = fusionConfig.getInt("HD Heat Variable", "3: Fusion Combo Heat Variable", 1380, 500, 20000, "");
		heatHT = fusionConfig.getInt("HT Heat Variable", "3: Fusion Combo Heat Variable", 4700, 500, 20000, "");
		heatHHe = fusionConfig.getInt("HHe Heat Variable", "3: Fusion Combo Heat Variable", 4820, 500, 20000, "");
		heatHB = fusionConfig.getInt("HB Heat Variable", "3: Fusion Combo Heat Variable", 5660, 500, 20000, "");
		heatHLi6 = fusionConfig.getInt("HLi6 Heat Variable", "3: Fusion Combo Heat Variable", 4550, 500, 20000, "");
		heatHLi7 = fusionConfig.getInt("HLi7 Heat Variable", "3: Fusion Combo Heat Variable", 4640, 500, 20000, "");
		heatDD = fusionConfig.getInt("DD Heat Variable", "3: Fusion Combo Heat Variable", 4780, 500, 20000, "");
		heatDT = fusionConfig.getInt("DT Heat Variable", "3: Fusion Combo Heat Variable", 670, 500, 20000, "");
		heatDHe = fusionConfig.getInt("DHe Heat Variable", "3: Fusion Combo Heat Variable", 2370, 500, 20000, "");
		heatDB = fusionConfig.getInt("DB Heat Variable", "3: Fusion Combo Heat Variable", 5955, 500, 20000, "");
		heatDLi6 = fusionConfig.getInt("DLi6 Heat Variable", "3: Fusion Combo Heat Variable", 5335, 500, 20000, "");
		heatDLi7 = fusionConfig.getInt("DLi7 Heat Variable", "3: Fusion Combo Heat Variable", 7345, 500, 20000, "");
		heatTT = fusionConfig.getInt("TT Heat Variable", "3: Fusion Combo Heat Variable", 3875, 500, 20000, "");
		heatTHe = fusionConfig.getInt("THe Heat Variable", "3: Fusion Combo Heat Variable", 5070, 500, 20000, "");
		heatTB = fusionConfig.getInt("TB Heat Variable", "3: Fusion Combo Heat Variable", 7810, 500, 20000, "");
		heatTLi6 = fusionConfig.getInt("TLi6 Heat Variable", "3: Fusion Combo Heat Variable", 7510, 500, 20000, "");
		heatTLi7 = fusionConfig.getInt("TLi7 Heat Variable", "3: Fusion Combo Heat Variable", 8060, 500, 20000, "");
		heatHeHe = fusionConfig.getInt("HeHe Heat Variable", "3: Fusion Combo Heat Variable", 6800, 500, 20000, "");
		heatHeB = fusionConfig.getInt("HeB Heat Variable", "3: Fusion Combo Heat Variable", 8060, 500, 20000, "");
		heatHeLi6 = fusionConfig.getInt("HeLi6 Heat Variable", "3: Fusion Combo Heat Variable", 8800, 500, 20000, "");
		heatHeLi7 = fusionConfig.getInt("HeLi7 Heat Variable", "3: Fusion Combo Heat Variable", 12500, 500, 20000, "");
		heatBB = fusionConfig.getInt("BB Heat Variable", "3: Fusion Combo Heat Variable", 8500, 500, 20000, "");
		heatBLi6 = fusionConfig.getInt("BLi6 Heat Variable", "3: Fusion Combo Heat Variable", 9200, 500, 20000, "");
		heatBLi7 = fusionConfig.getInt("BLi7 Heat Variable", "3: Fusion Combo Heat Variable", 13000, 500, 20000, "");
		heatLi6Li6 = fusionConfig.getInt("Li6Li6 Heat Variable", "3: Fusion Combo Heat Variable", 12000, 500, 20000, "");
		heatLi6Li7 = fusionConfig.getInt("Li6Li7 Heat Variable", "3: Fusion Combo Heat Variable", 11000, 500, 20000, "");
		heatLi7Li7 = fusionConfig.getInt("Li7Li7 Heat Variable", "3: Fusion Combo Heat Variable", 14000, 500, 20000, "");
		
		acceleratorUpdateRate = acceleratorConfig.getInt("Number of ticks per update of Particle Accelerators", "!: Update Rate", 20, 1, 1000, "");
		EMUpdateRate = acceleratorConfig.getInt("Number of ticks per update of Electromagnet and Supercooler Tile Entities", "!: Update Rate", 100, 1, 1000, "");
		acceleratorSounds = acceleratorConfig.getBoolean("Enable Particle Accelerator Sound Effects", "!: Sounds", true, "");
		ringMaxSize = acceleratorConfig.getInt("Maximum Ring Size", "0: General", 200, 20, 2000, "");
		colliderRF = acceleratorConfig.getInt("Collider RF Requirement Multiplier", "0: General", 100, 10, 1000, "");
		colliderProduction = acceleratorConfig.getInt("Collider Production Multiplier", "0: General", 100, 10, 1000, "");
		synchrotronRF = acceleratorConfig.getInt("Synchrotron RF Requirement Multiplier", "0: General", 100, 10, 1000, "");
		synchrotronProduction = acceleratorConfig.getInt("Synchrotron Production Multiplier", "0: General", 100, 10, 1000, "");
		superElectromagnetRF = acceleratorConfig.getInt("Superconducting Electromagnet RF/t Requirement", "0: General", 500, 0, 10000, "");
		electromagnetHe = acceleratorConfig.getInt("Electromagnet Supercooler Liquid Helium mB/s Requirement", "0: General", 1, 0, 100, "");
		acceleratorProduction = acceleratorConfig.getInt("Synchrotron Production Multiplier", "0: General", 100, 10, 1000, "");
		
		bronzeHarvestLevel = toolConfig.getInt("Bronze Harvest Level", "0: Bronze", 2, 0, 10, "");
		bronzeDurability = toolConfig.getInt("Bronze Durability", "0: Bronze", 300, 1, 32767, "");
		bronzeSpeed = toolConfig.getInt("Bronze Speed", "0: Bronze", 7, 1, 50, "");
		bronzeDamage = toolConfig.getInt("Bronze Damage", "0: Bronze", 2, 0, 25, "");
		
		toughHarvestLevel = toolConfig.getInt("Tough Alloy Harvest Level", "1: Tough", 4, 0, 10, "");
		toughDurability = toolConfig.getInt("Tough Alloy Durability", "1: Tough", 3000, 1, 32767, "");
		toughSpeed = toolConfig.getInt("Tough Alloy Speed", "1: Tough", 16, 1, 50, "");
		toughDamage = toolConfig.getInt("Tough Alloy Damage", "1: Tough", 12, 0, 25, "");
		
		tPHarvestLevel = toolConfig.getInt("Tough Alloy Paxel Harvest Level", "2: Tough Paxel", 4, 0, 10, "");
		tPDurability = toolConfig.getInt("Tough Alloy Paxel Durability", "2: Tough Paxel", 15000, 1, 32767, "");
		tPSpeed = toolConfig.getInt("Tough Alloy Paxel Speed", "2: Tough Paxel", 16, 1, 50, "");
		tPDamage = toolConfig.getInt("Tough Alloy Paxel Damage", "2: Tough Paxel", 14, 0, 25, "");
		
		dUHarvestLevel = toolConfig.getInt("DU Harvest Level", "3: DU", 8, 0, 10, "");
		dUDurability = toolConfig.getInt("DU Durability", "3: DU", 6400, 1, 32767, "");
		dUSpeed = toolConfig.getInt("DU Speed", "3: DU", 25, 1, 50, "");
		dUDamage = toolConfig.getInt("DU Damage", "3: DU", 18, 0, 25, "");
		
		dUPHarvestLevel = toolConfig.getInt("DU Paxel Harvest Level", "4: DU Paxel", 8, 0, 10, "");
		dUPDurability = toolConfig.getInt("DU Paxel Durability", "4: DU Paxel", 32000, 1, 32767, "");
		dUPSpeed = toolConfig.getInt("DU Paxel Speed", "4: DU Paxel", 25, 1, 50, "");
		dUPDamage = toolConfig.getInt("DU Paxel Damage", "4: DU Paxel", 20, 0, 25, "");
		
		boronHarvestLevel = toolConfig.getInt("Boron Harvest Level", "5: Boron", 2, 0, 10, "");
		boronDurability = toolConfig.getInt("Boron Durability", "5: Boron", 1000, 1, 32767, "");
		boronSpeed = toolConfig.getInt("Boron Speed", "5: Boron", 8, 1, 50, "");
		boronDamage = toolConfig.getInt("Boron Damage", "5: Boron", 3, 0, 25, "");
		
		config.save();
		fissionConfig.save();
		fusionConfig.save();
		acceleratorConfig.save();
		toolConfig.save();
	}

}
